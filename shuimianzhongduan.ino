#include <avr/sleep.h>
#include <avr/power.h>
#include <IRremote.h>
#include <U8glib.h>
const unsigned char PROGMEM wanan[] = {
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x07,0xC0,0x00,0x00,0x00,0x00,0x0F,0x80,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x0F,0x80,0x00,0x00,0x00,0x00,0x07,0xC0,0x00,0x00,0x00,0x00,
0x00,0x00,0x1F,0xFC,0x0F,0xFF,0xE0,0x00,0x00,0x00,0x03,0xF0,0x00,0x00,0x00,0x00,
0x00,0x00,0x1F,0xFC,0x1F,0xFF,0xE0,0x00,0x03,0xFF,0xFF,0xFF,0xFF,0xC0,0x00,0x00,
0x00,0x00,0x1F,0xFC,0x3F,0xFF,0xE0,0x00,0x03,0xFF,0xFF,0xFF,0xFF,0xC0,0x00,0x00,
0x00,0x00,0x1C,0x3C,0x78,0x07,0xC0,0x00,0x03,0xFF,0xFF,0xFF,0xFF,0xC0,0x00,0x00,
0x00,0x00,0x1C,0x3D,0xF0,0x0F,0x80,0x00,0x03,0xC0,0x0C,0x00,0x03,0xC0,0x00,0x00,
0x00,0x00,0x1C,0x3F,0xE0,0x1F,0x00,0x00,0x03,0xC0,0x1F,0x00,0x03,0xC0,0x00,0x00,
0x00,0x00,0x1C,0x3D,0xFF,0xFF,0xFC,0x00,0x03,0xC0,0x3E,0x00,0x03,0xC0,0x00,0x00,
0x00,0x00,0x1C,0x3C,0xFF,0xFF,0xFC,0x00,0x00,0x00,0x3C,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x1C,0x3C,0xE0,0x70,0x3C,0x00,0x00,0x00,0x78,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x1F,0xFC,0xE0,0xF0,0x3C,0x00,0x0F,0xFF,0xFF,0xFF,0xFF,0xF0,0x00,0x00,
0x00,0x00,0x1F,0xFC,0xE0,0xF0,0x3C,0x00,0x0F,0xFF,0xFF,0xFF,0xFF,0xF0,0x00,0x00,
0x00,0x00,0x1F,0xFC,0xE0,0xF0,0x3C,0x00,0x0F,0xFF,0xFF,0xFF,0xFF,0xF0,0x00,0x00,
0x00,0x00,0x1C,0x3C,0xFF,0xFF,0xFC,0x00,0x00,0x03,0xC0,0x01,0xE0,0x00,0x00,0x00,
0x00,0x00,0x1C,0x3C,0xFF,0xFF,0xFC,0x00,0x00,0x07,0x80,0x03,0xC0,0x00,0x00,0x00,
0x00,0x00,0x1C,0x3C,0xFF,0xFF,0xFC,0x00,0x00,0x0F,0x00,0x07,0xC0,0x00,0x00,0x00,
0x00,0x00,0x1C,0x3C,0xE1,0xFE,0x3C,0x00,0x00,0x1F,0xE0,0x0F,0x80,0x00,0x00,0x00,
0x00,0x00,0x1C,0x3C,0x01,0xFE,0x00,0x00,0x00,0x07,0xFE,0x3F,0x00,0x00,0x00,0x00,
0x00,0x00,0x1C,0x3C,0x03,0xDE,0x00,0x00,0x00,0x00,0xFF,0xFC,0x00,0x00,0x00,0x00,
0x00,0x00,0x1F,0xFC,0x07,0xDE,0x07,0x00,0x00,0x00,0x1F,0xF8,0x00,0x00,0x00,0x00,
0x00,0x00,0x1F,0xFC,0x0F,0x9E,0x07,0x00,0x00,0x00,0x0F,0xFF,0x00,0x00,0x00,0x00,
0x00,0x00,0x1F,0xFC,0x3F,0x1E,0x0F,0x00,0x00,0x00,0xFF,0xFF,0xE0,0x00,0x00,0x00,
0x00,0x00,0x1C,0x00,0xFE,0x1E,0x0F,0x00,0x00,0x1F,0xFE,0x0F,0xFC,0x00,0x00,0x00,
0x00,0x00,0x1C,0x03,0xF8,0x1F,0xFE,0x00,0x03,0xFF,0xF8,0x01,0xFF,0x80,0x00,0x00,
0x00,0x00,0x00,0x07,0xE0,0x0F,0xFE,0x00,0x03,0xFF,0x80,0x00,0x3F,0x00,0x00,0x00,
0x00,0x00,0x00,0x03,0x80,0x03,0xF0,0x00,0x01,0xF8,0x00,0x00,0x0E,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
};

int RECV_PIN = 10;
IRrecv irrecv(RECV_PIN);
decode_results results;

#define INTERVAL_LCD             20             //定义OLED刷新时间间隔  
unsigned long lcd_time = millis();                 //OLED刷新时间计时器
U8GLIB_SSD1306_128X64 u8g(U8G_I2C_OPT_NONE);     //设置OLED型号  
//-------字体设置，大、中、小
#define setFont_L u8g.setFont(u8g_font_7x13)
#define setFont_M u8g.setFont(u8g_font_fixed_v0r)
#define setFont_S u8g.setFont(u8g_font_fixed_v0r)
#define setFont_SS u8g.setFont(u8g_font_fub25n)
 
int pin2 = 2;//触摸开关接D2
 
long previousMillis = 0;        // 存储LED最后一次的更新
long interval = 5000;           // 闪烁的时间间隔（毫秒）
unsigned long currentMillis=0;

/***************************************************
 *  函数名:        pin2Interrupt
 *  返回值:     Nothing.
 *  参数值:  None.
 *  释义: 服务pin2中断请求    
 ***************************************************/
void pin2Interrupt(void) {
    /* 中断唤醒 */
 
    /*当中断引脚为低电平时关闭中断*/
    Serial.println("wake up!!!");
    detachInterrupt(0);
}
 
/***************************************************
 *  Name:        enterSleep
 *  Returns:     Nothing.
 *  Parameters:  None.
 *  Description: 进入睡眠模式.
 ***************************************************/
void enterSleep(void) {

    attachInterrupt(0, pin2Interrupt, LOW);
    delay(100);
    set_sleep_mode(SLEEP_MODE_PWR_DOWN);//控制处理器进入睡眠模式
    sleep_enable();
    sleep_mode();
    sleep_disable();
}
 
/***************************************************
 *  Name:        setup
 *  Returns:     Nothing.
 *  Parameters:  None.
 *  Description: Setup for the Arduino.           
 ***************************************************/
void setup() {
    Serial.begin(9600);//初始化串口
    /* Setup the pin direction. */
    pinMode(pin2, INPUT);//设置端口模式为输入
    irrecv.enableIRIn(); // 启动红外解码
    Serial.println("Initialisation complete.");
}
 
/***************************************************
 *  Name:        loop
 *  Returns:     Nothing.
 *  Parameters:  None.
 *  Description: Main application loop.
 ***************************************************/
void loop() {
    currentMillis = millis();//读取系统计时器
    Serial.print("Awake for ");
    Serial.print(currentMillis - previousMillis, DEC);//计算清醒时间
    Serial.println(" second");
    delay(1000);

    if (irrecv.decode(&results)) {
      Serial.println(results.value, HEX);//串口打印接收的红外信息
  
      u8g.firstPage();//u8glib规定的写法
      do {
          setFont_L;
           u8g.drawBitmapP(0, 0, 16, 64, wanan);
           //u8g.drawXBMP(0, 0, 128, 64, wanan);
      }while( u8g.nextPage() );//u8glib规定的写法
      
      irrecv.resume(); // 接收下一个值
      previousMillis = currentMillis;//存储本次循环结束时的时间点
    }

    if(currentMillis - previousMillis > interval) {//如果清醒时间大于了设置的时间
      previousMillis = currentMillis; //清零清醒时间
      Serial.println("Entering sleep");
      enterSleep();//进入睡眠
    }
  if(currentMillis<previousMillis)
    previousMillis=currentMillis=0; //如果系统计时器清0，则清0 所有计时器相关的变量。
}
